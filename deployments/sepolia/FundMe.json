{
    "address": "0xA00a8272d583B3FF3A011352ce4Fb42Ba6D79115",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINUMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountSend",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0xd83cbeb5ff166677876a1374d27adc49b4b22c33c39c15476e29f8a16657962f",
    "receipt": {
        "to": null,
        "from": "0x55Bd02D76c90fdB521a4F0Dab87E71108d3A9Ffe",
        "contractAddress": "0xA00a8272d583B3FF3A011352ce4Fb42Ba6D79115",
        "transactionIndex": 15,
        "gasUsed": "1006252",
        "logsBloom": "0x
        "blockHash": "0xd4f10cbc4436d2e08f9cc18bdafbc80e3074a56424af4a96d6d2798327e0da26",
        "transactionHash": "0xd83cbeb5ff166677876a1374d27adc49b4b22c33c39c15476e29f8a16657962f",
        "logs": [],
        "blockNumber": 3343923,
        "cumulativeGasUsed": "3387345",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x694AA1769357215DE4FAC081bf1f309aDC325306"],
    "numDeployments": 2,
    "solcInputHash": "c1ad95c5c27b9337a265db1f53a0128d",
    "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINUMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountSend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Evans Atoko\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Acontract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\n// imoprts\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\n// Error codes\\n\\nerror FundMe__NotOwner();\\n\\n// contract\\n\\n/**\\n * @title Acontract for crowd funding\\n * @author Evans Atoko\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\n\\ncontract FundMe {\\n    // type declarations\\n    using PriceConverter for uint256;\\n\\n    // state variables\\n    uint256 public constant MINUMUM_USD = 50 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountSend;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    //Modifiers\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     */\\n\\n    function fund() public payable {\\n        // Want to be able to set the minimu fund amount in usd\\n        // 1 how do we send ETH to this contract\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINUMUM_USD,\\n            \\\"didn't send enough\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountSend[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountSend[funder] = 0;\\n        }\\n        // reset the array\\n        s_funders = new address[](0);\\n\\n        // actually withdraw the funds\\n\\n        (bool success, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(success, \\\"call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountSend[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n\\n        (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(success);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountSend(address funder) public view returns (uint256) {\\n        return s_addressToAmountSend[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x66f998c254f8d4ee5daee69029edb64307c56dbe9a8aafe5226a74892d85abcd\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // ABI\\n        // address 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of usd\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x2ac28c6ea5f0dbafe8181dbd40853d7871de8919685a2b800fbc55450db2ee85\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b506040516200125b3803806200125b8339818101604052810190620000379190620000cd565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600081519050620000c78162000138565b92915050565b600060208284031215620000e657620000e562000133565b5b6000620000f684828501620000b6565b91505092915050565b60006200010c8262000113565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014381620000ff565b81146200014f57600080fd5b50565b60805160601c6110d562000186600039600081816102e901528181610574015281816105c401526107ba01526110d56000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b8063116ebb2d146100985780633ccfd60b146100c35780637b5119c5146100cd578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100ad6102da565b6040516100ba9190610c79565b60405180910390f35b6100cb6102e7565b005b3480156100d957600080fd5b506100f460048036038101906100ef9190610a83565b610527565b6040516101019190610c79565b60405180910390f35b34801561011657600080fd5b5061011f610570565b60405161012c9190610c03565b60405180910390f35b34801561014157600080fd5b5061014a610598565b6040516101579190610c1e565b60405180910390f35b6101686101b1565b005b6101726105c2565b005b34801561018057600080fd5b5061019b60048036038101906101969190610ab0565b610850565b6040516101a89190610c03565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089790919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c39565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041757600080828154811061039157610390610f8b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040f90610ee4565b91505061036f565b50600067ffffffffffffffff81111561043357610432610fba565b5b6040519080825280602002602001820160405280156104615781602001602082028036833780820191505090505b5060009080519060200190610477929190610973565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049e90610bee565b60006040518083038185875af1925050503d80600081146104db576040519150601f19603f3d011682016040523d82523d6000602084013e6104e0565b606091505b5050905080610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b90610c59565b60405180910390fd5b50565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610647576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610680575b5050505050905060005b81518110156107555760008282815181106106f2576106f1610f8b565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074d90610ee4565b9150506106d4565b50600067ffffffffffffffff81111561077157610770610fba565b5b60405190808252806020026020018201604052801561079f5781602001602082028036833780820191505090505b50600090805190602001906107b5929190610973565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107fc90610bee565b60006040518083038185875af1925050503d8060008114610839576040519150601f19603f3d011682016040523d82523d6000602084013e61083e565b606091505b505090508061084c57600080fd5b5050565b600080828154811061086557610864610f8b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a3836108d3565b90506000670de0b6b3a764000085836108bc9190610df8565b6108c69190610cb0565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091c57600080fd5b505afa158015610930573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109549190610add565b5050509150506402540be4008161096b9190610ce1565b915050919050565b8280548282559060005260206000209081019282156109ec579160200282015b828111156109eb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610993565b5b5090506109f991906109fd565b5090565b5b80821115610a165760008160009055506001016109fe565b5090565b600081359050610a2981611043565b92915050565b600081519050610a3e8161105a565b92915050565b600081359050610a5381611071565b92915050565b600081519050610a6881611071565b92915050565b600081519050610a7d81611088565b92915050565b600060208284031215610a9957610a98610fe9565b5b6000610aa784828501610a1a565b91505092915050565b600060208284031215610ac657610ac5610fe9565b5b6000610ad484828501610a44565b91505092915050565b600080600080600060a08688031215610af957610af8610fe9565b5b6000610b0788828901610a6e565b9550506020610b1888828901610a2f565b9450506040610b2988828901610a59565b9350506060610b3a88828901610a59565b9250506080610b4b88828901610a6e565b9150509295509295909350565b610b6181610e52565b82525050565b610b7081610eae565b82525050565b6000610b83601283610c9f565b9150610b8e82610fee565b602082019050919050565b6000610ba6600b83610c9f565b9150610bb182611017565b602082019050919050565b6000610bc9600083610c94565b9150610bd482611040565b600082019050919050565b610be881610e8e565b82525050565b6000610bf982610bbc565b9150819050919050565b6000602082019050610c186000830184610b58565b92915050565b6000602082019050610c336000830184610b67565b92915050565b60006020820190508181036000830152610c5281610b76565b9050919050565b60006020820190508181036000830152610c7281610b99565b9050919050565b6000602082019050610c8e6000830184610bdf565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cbb82610e8e565b9150610cc683610e8e565b925082610cd657610cd5610f5c565b5b828204905092915050565b6000610cec82610e64565b9150610cf783610e64565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d3657610d35610f2d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d7357610d72610f2d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610db057610daf610f2d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610ded57610dec610f2d565b5b828202905092915050565b6000610e0382610e8e565b9150610e0e83610e8e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4757610e46610f2d565b5b828202905092915050565b6000610e5d82610e6e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610eb982610ec0565b9050919050565b6000610ecb82610ed2565b9050919050565b6000610edd82610e6e565b9050919050565b6000610eef82610e8e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f2257610f21610f2d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f6469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b61104c81610e52565b811461105757600080fd5b50565b61106381610e64565b811461106e57600080fd5b50565b61107a81610e8e565b811461108557600080fd5b50565b61109181610e98565b811461109c57600080fd5b5056fea2646970667358221220190d7123005f0489258fc4494c9818ec5039ad26efc318f7b672ebdcedd4822264736f6c63430008070033",
    "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b8063116ebb2d146100985780633ccfd60b146100c35780637b5119c5146100cd578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100ad6102da565b6040516100ba9190610c79565b60405180910390f35b6100cb6102e7565b005b3480156100d957600080fd5b506100f460048036038101906100ef9190610a83565b610527565b6040516101019190610c79565b60405180910390f35b34801561011657600080fd5b5061011f610570565b60405161012c9190610c03565b60405180910390f35b34801561014157600080fd5b5061014a610598565b6040516101579190610c1e565b60405180910390f35b6101686101b1565b005b6101726105c2565b005b34801561018057600080fd5b5061019b60048036038101906101969190610ab0565b610850565b6040516101a89190610c03565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089790919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c39565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461036c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60008054905081101561041757600080828154811061039157610390610f8b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040f90610ee4565b91505061036f565b50600067ffffffffffffffff81111561043357610432610fba565b5b6040519080825280602002602001820160405280156104615781602001602082028036833780820191505090505b5060009080519060200190610477929190610973565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161049e90610bee565b60006040518083038185875af1925050503d80600081146104db576040519150601f19603f3d011682016040523d82523d6000602084013e6104e0565b606091505b5050905080610524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161051b90610c59565b60405180910390fd5b50565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610647576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610680575b5050505050905060005b81518110156107555760008282815181106106f2576106f1610f8b565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074d90610ee4565b9150506106d4565b50600067ffffffffffffffff81111561077157610770610fba565b5b60405190808252806020026020018201604052801561079f5781602001602082028036833780820191505090505b50600090805190602001906107b5929190610973565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107fc90610bee565b60006040518083038185875af1925050503d8060008114610839576040519150601f19603f3d011682016040523d82523d6000602084013e61083e565b606091505b505090508061084c57600080fd5b5050565b600080828154811061086557610864610f8b565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a3836108d3565b90506000670de0b6b3a764000085836108bc9190610df8565b6108c69190610cb0565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091c57600080fd5b505afa158015610930573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109549190610add565b5050509150506402540be4008161096b9190610ce1565b915050919050565b8280548282559060005260206000209081019282156109ec579160200282015b828111156109eb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610993565b5b5090506109f991906109fd565b5090565b5b80821115610a165760008160009055506001016109fe565b5090565b600081359050610a2981611043565b92915050565b600081519050610a3e8161105a565b92915050565b600081359050610a5381611071565b92915050565b600081519050610a6881611071565b92915050565b600081519050610a7d81611088565b92915050565b600060208284031215610a9957610a98610fe9565b5b6000610aa784828501610a1a565b91505092915050565b600060208284031215610ac657610ac5610fe9565b5b6000610ad484828501610a44565b91505092915050565b600080600080600060a08688031215610af957610af8610fe9565b5b6000610b0788828901610a6e565b9550506020610b1888828901610a2f565b9450506040610b2988828901610a59565b9350506060610b3a88828901610a59565b9250506080610b4b88828901610a6e565b9150509295509295909350565b610b6181610e52565b82525050565b610b7081610eae565b82525050565b6000610b83601283610c9f565b9150610b8e82610fee565b602082019050919050565b6000610ba6600b83610c9f565b9150610bb182611017565b602082019050919050565b6000610bc9600083610c94565b9150610bd482611040565b600082019050919050565b610be881610e8e565b82525050565b6000610bf982610bbc565b9150819050919050565b6000602082019050610c186000830184610b58565b92915050565b6000602082019050610c336000830184610b67565b92915050565b60006020820190508181036000830152610c5281610b76565b9050919050565b60006020820190508181036000830152610c7281610b99565b9050919050565b6000602082019050610c8e6000830184610bdf565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610cbb82610e8e565b9150610cc683610e8e565b925082610cd657610cd5610f5c565b5b828204905092915050565b6000610cec82610e64565b9150610cf783610e64565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d3657610d35610f2d565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610d7357610d72610f2d565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610db057610daf610f2d565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610ded57610dec610f2d565b5b828202905092915050565b6000610e0382610e8e565b9150610e0e83610e8e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e4757610e46610f2d565b5b828202905092915050565b6000610e5d82610e6e565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610eb982610ec0565b9050919050565b6000610ecb82610ed2565b9050919050565b6000610edd82610e6e565b9050919050565b6000610eef82610e8e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610f2257610f21610f2d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f6469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b7f63616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b50565b61104c81610e52565b811461105757600080fd5b50565b61106381610e64565b811461106e57600080fd5b50565b61107a81610e8e565b811461108557600080fd5b50565b61109181610e98565b811461109c57600080fd5b5056fea2646970667358221220190d7123005f0489258fc4494c9818ec5039ad26efc318f7b672ebdcedd4822264736f6c63430008070033",
    "devdoc": {
        "author": "Evans Atoko",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {},
        "title": "Acontract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This function funds this contract"
            }
        },
        "notice": "This contract is to demo a sample funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 62,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "0",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 66,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountSend",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 71,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
